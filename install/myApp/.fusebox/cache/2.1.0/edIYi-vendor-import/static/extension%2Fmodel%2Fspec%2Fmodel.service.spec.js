module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar model_service_js_1 = require(\"app/extension/model/model.service.js\");\nvar model$;\ndescribe(\"model.service\", function () {\n    var result;\n    var mockKey = \"project.data.json\";\n    var appModelMock1 = angular.toJson({\n        \"project.data.json\": angular.toJson({\n            name: \"Rectangular\"\n        })\n    });\n    var appModelMock2 = angular.toJson({\n        \"project.data.json\": angular.toJson({\n            name: \"Rectangular\",\n            version: \"1.0.0\"\n        })\n    });\n    beforeEach(function () {\n        model$ = model_service_js_1.default;\n        model$._model = __.createSpy(\"model$._model\");\n        model$._model.and.callFake(function (key) {\n            return appModelMock1[key];\n        });\n    });\n    describe(\"When 'model$._model' is called\", function () {\n        beforeEach(function () {\n            result = model$._model(mockKey);\n        });\n        it(\"it should be called exactly once\", function () {\n            expect(model$._model.calls.count()).toEqual(1);\n        });\n        it(\"it should be called with the correct arguments\", function () {\n            expect(model$._model.calls.mostRecent().args[0]).toEqual(mockKey);\n        });\n        it(\"it should return the correct value\", function () {\n            expect(model$._model(mockKey)).toEqual(appModelMock1[mockKey]);\n        });\n    });\n    describe(\"When 'model$.get' is called\", function () {\n        beforeEach(function () {\n            model$.get = __.createSpy(\"model$.get\");\n            result = model$.get(mockKey);\n        });\n        it(\"it should be called exactly once\", function () {\n            expect(model$.get.calls.count()).toEqual(1);\n        });\n        it(\"it should be called with the correct arguments\", function () {\n            expect(model$.get.calls.mostRecent().args[0]).toEqual(mockKey);\n        });\n        it(\"it should return the correct value\", function () {\n            expect(result).toEqual(angular.fromJson(appModelMock1[mockKey]));\n        });\n    });\n    describe(\"When 'model$.mixin' is called\", function () {\n        beforeEach(function () {\n            model$.mixin = __.createSpy(\"model$.mixin\");\n            result = model$.mixin(mockKey, [{ version: \"1.0.0\" }]);\n        });\n        it(\"it should be called exactly once\", function () {\n            expect(model$.mixin.calls.count()).toEqual(1);\n        });\n        it(\"it should be called with the correct arguments\", function () {\n            expect(model$.mixin.calls.mostRecent().args[0]).toEqual(mockKey);\n        });\n        it(\"it should return the correct value\", function () {\n            expect(result).toEqual(angular.fromJson(appModelMock2[mockKey]));\n        });\n    });\n});\n",
dependencies: ["app/extension/model/model.service.js"],
sourceMap: {},
headerContent: undefined,
mtime: 1498604735000
};