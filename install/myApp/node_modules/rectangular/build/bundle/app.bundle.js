// const fb = require("fuse-box");

// const {
// 	FuseBox,
// 	UglifyJSPlugin,
// 	BabelPlugin
// } = fb;

require("dotenv").config();

const getPath = require("../utility/get.path.js");
const NODE_ENV = process.env.NODE_ENV;
// const dirPath = __dirname.substring(1);

// console.log(dirPath);
// // Create FuseBox instance
// const fuse = FuseBox.init({
// 	homeDir: getPath() + "/node_modules/rectangular/tmp/app/",
// 	// package:{
// 	// 	name: "app",
// 	// 	main: "index.ts",
// 	// },
// 	// If you want to include source maps
// 	// sourceMap: {
// 	// 	bundleReference: "app.js.map",
// 	// 	outFile: "./dist/app.js.map"
// 	// },
// 	// File path to put the output file
// 	output: getPath() + "/dist/$name.js",
// 	// Add plugins in order to compile CSS or babel
// 	plugins: [
// 		// CSSPlugin(),
// 		// BabelPlugin()
// 		// UglifyJSPlugin()
// 	],
// 	log: true,
// 	debug: true
// });

// // Deps
// // const vendor = fuse
// // 	.bundle("vendor-import")
// // 	.instructions("~ " + getPath() + "/node_modules/rectangular/tmp/app/**/*.{js}")
// // ;

// // Bundle without deps
// const app = fuse
// 	.bundle("app")
// 	.instructions("> [" + getPath() + "/node_modules/rectangular/tmp/app/app.module.js]")
// ;

// // if (process.env === "development") {
// // 	vendor.watch();
// // 	vendor.hmr();
	
// // 	app.watch();
// // 	app.hmr();
// // 	app.sourceMaps(true);
// // }

// fuse.run();

const {
	BabelPlugin,
	// EnvPlugin,
	FuseBox,
	HTMLPlugin,
	QuantumPlugin
	// SassPlugin,
	// CSSPlugin,
	// WebIndexPlugin,
	// TypeScriptHelpers,
	// JSONPlugin,
	// HTMLPlugin,
	// Sparky,
} = require('fuse-box');

let
	fuse,
	app,
	vendor,
	isProduction,
	producer
;

// Sparky.task("config", () => {
	fuse = FuseBox.init({
		homeDir: getPath() + "/node_modules/rectangular/tmp/app/",
		output: getPath() + "/dist/$name.js",
		// hash: isProduction,
		plugins: [
			EnvPlugin(
				{ 'NODE_ENV': NODE_ENV === "production"
					? "production"
					: "development"
				}
			),
			// WebIndexPlugin({
			// 	title: 'FuseBox + Angular',
			// 	template: 'src/index.html',
			// }), [
			// 	SassPlugin({
			// 		outputStyle: 'compressed',
			// 	}),
			// 	CSSPlugin(),
			// ],
			// JSONPlugin(),
			// HTMLPlugin({
			// 	useDefault: false,
			// }),
			HTMLPlugin({
				useDefault : true
			}),
			BabelPlugin(),
			// http://fuse-box.org/page/quantum
			// QuantumPlugin({
			// 	browser: true,
			// 	uglify: true,
			// 	ensureES5 : true
			// })
		],
	});

	vendor = fuse
		.bundle('vendor-import')
		.target("browser")
		.instructions(`~ **/**.{js}`)
	;
	
	app = fuse
		.bundle('app')
		.target("browser")
		// .sourceMaps(!isProduction)
		.instructions(`!> [app.module.js]`)
	;
// });
fuse.run();
// Sparky
// 	.task(
// 		"default",
// 		[
// 			// "clean",
// 			"config"
// 		],
// 		() => {
// 			// fuse.dev();
// 			// add dev instructions
// 			// app.watch().hmr()
// 			return fuse.run().then((fuseProducer) => {
// 				producer = fuseProducer;
// 			});
// 		}
// 	)
// ;

// // Sparky
// // 	.task(
// // 		"clean",
// // 		() => Sparky.src(getPath() + "/dist/"
// // 	)
// // 	.clean(getPath() + "/dist/"))
// // ;

// Sparky
// 	.task(
// 		"prod-env",
// 		// ["clean"],
// 		() => { isProduction = true }
// 	)
// ;

// Sparky
// 	.task(
// 		"dist",
// 		[
// 			"prod-env",
// 			"config"
// 		],
// 		() => {
// 			// comment out to prevent dev server from running (left for the demo)
// 			// fuse.dev();
// 			return fuse.run().then((fuseProducer) => {
// 				producer = fuseProducer;
// 			});
// 		}
// 	)
// ;