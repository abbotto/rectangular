{
	"env": {
		"browser": true,
		"node": true,
		"es6": true,
		"mocha": true
	},
	"globals": {
		"$": true,
		"$dom": true,
		"angular": true
	},
	"ecmaFeatures": {
		"impliedStrict": true
	},
	"plugins": [
		"angular",
		"disable"
	],
	"rules": {
		// --------------------------------
		// START ANGULAR RULES
		// --------------------------------
		"angular/angularelement": 1,
		"angular/controller-as": 2,
		"angular/controller-as-route": 2,
		"angular/controller-as-vm": [2, "vm"],
		"angular/controller-name": [2,
			"/^([A-Z])+([A-Za-z]*)*/"
		],
		"angular/deferred": 0,
		"angular/definedundefined": 2,
		"angular/di": [2, "function"],
		"angular/di-order": [0, true],
		"angular/directive-name": [2,
			"/^([a-z])+([A-Za-z]*)*/"
		],
		"angular/component-limit": [2, 1],
		"angular/document-service": 2,
		"angular/empty-controller": 2,
		"angular/file-name": 0,
		"angular/filter-name": [2,
			"/^([a-z])+([A-Za-z]*)*/"
		],
		"angular/foreach": 2,
		"angular/function-type": 0,
		"angular/interval-service": 2,
		"angular/json-functions": 2,
		"angular/log": 2,
		"angular/module-getter": 2,
		"angular/module-name": [2,
			"/(\\.?([a-z])+([A-Z])*)+/"
		],
		"angular/module-setter": 2,
		"angular/no-angular-mock": 2,
		"angular/no-controller": 2,
		"angular/no-cookiestore": 2,
		"angular/no-jquery-angularelement": 2,
		"angular/no-private-call": 2,
		"angular/no-service-method": 2,
		"angular/no-services": [2, ["$http", "$resource", "Restangular"]],
		"angular/on-watch": 2,
		"angular/rest-service": 0,
		"angular/service-name": [2, "/^([A-Z])+([A-Za-z]*).*\\$$/"],
		"angular/timeout-service": 2,
		"angular/typecheck-array": 2,
		"angular/typecheck-date": 2,
		"angular/typecheck-function": 2,
		"angular/typecheck-number": 2,
		"angular/typecheck-object": 2,
		"angular/typecheck-string": 2,
		"angular/watchers-execution": [0, "$digest"],
		"angular/window-service": 2,
		// --------------------------------
		// END ANGULAR RULES
		// --------------------------------
		// --------------------------------
		// START JS RULES
		// --------------------------------
		"no-use-before-define": 2,
		// use double-quotes for strings
		"quotes": [2, "double"],
		// enforce tabular indentation: https://www.youtube.com/watch?v=SsoOG6ZeyUI
		"indent": ["error", "tab", {
			"SwitchCase": 1
		}],
		// enforces getter/setter pairs in objects
		"accessor-pairs": 0,
		// treat var statements as if they were block scoped
		"block-scoped-var": 2,
		// specify the maximum cyclomatic complexity allowed in a program
		"complexity": [0, 11],
		// This rule requires return statements to either always or never specify values.
		"consistent-return": "error",
		// require return statements to either always or never specify values
		// "consistent-return": 2,
		// specify curly brace conventions for all control statements
		"curly": [2, "multi-line"],
		// require default case in switch statements
		"default-case": 2,
		// enforces consistent newlines before or after dots
		"dot-location": 0,
		// encourages use of dot notation whenever possible
		"dot-notation": [2, {
			"allowKeywords": true
		}],
		// require the use of === and !==
		"eqeqeq": 2,
		"func-style": [2, "expression", {
			"allowArrowFunctions": true
		}],
		"func-names": 2,
		// make sure for-in loops have an if statement
		"guard-for-in": 2,
		// disallow the use of alert, confirm, and prompt
		"no-alert": 1,
		"no-array-constructor": 2,
		// disallow use of arguments.caller or arguments.callee
		"no-caller": 2,
		// disallow lexical declarations in case clauses
		"no-case-declarations": 2,
		"no-const-assign": 2,
		// disallow division operators explicitly at beginning of regular expression
		"no-div-regex": 0,
		// disallow else after a return in an if
		"no-else-return": 2,
		// disallow use of empty destructuring patterns
		"no-empty-pattern": 0,
		// disallow comparisons to null without a type-checking operator
		"no-eq-null": 0,
		// disallow use of eval()
		"no-eval": 2,
		// disallow adding to native types
		"no-extend-native": 2,
		// disallow unnecessary function binding
		"no-extra-bind": 2,
		// disallow fallthrough of case statements
		"no-fallthrough": 2,
		// disallow the use of leading or trailing decimal points in numeric literals
		"no-floating-decimal": 2,
		// disallow the type conversions with shorter notations
		"no-implicit-coercion": 0,
		// disallow use of eval()-like methods
		"no-implied-eval": 2,
		// disallow this keywords outside of classes or class-like objects
		"no-invalid-this": 0,
		// disallow usage of __iterator__ property
		"no-iterator": 2,
		// disallow use of labeled statements
		"no-labels": [2, {
			"allowLoop": true,
			"allowSwitch": true
		}],
		// disallow unnecessary nested blocks
		"no-lone-blocks": 2,
		// disallow creation of functions within loops
		"no-loop-func": 2,
		// disallow the use of magic numbers
		"no-magic-numbers": 0,
		// disallow mixed spaces and tabs for indentation
		"no-mixed-spaces-and-tabs": 2,
		// Disallows multiple blank lines
		"no-multiple-empty-lines": [2, {
			"max": 1
		}],
		// disallow use of multiple spaces
		"no-multi-spaces": 2,
		// disallow use of multiline strings
		"no-multi-str": 2,
		// disallow reassignments of global objects
		"no-global-assign": 2,
		// disallow use of new operator for Function object
		"no-new-func": 2,
		// disallow use of new operator for Object
		"no-new-object": 2,
		// disallows creating new instances of String,Number, and Boolean
		"no-new-wrappers": 2,
		// disallow use of new operator when not part of the assignment or comparison
		"no-new": 2,
		// disallow use of octal escape sequences in string literals, such as
		// var foo = "Copyright \251";
		"no-octal-escape": 2,
		// disallow use of (old style) octal literals
		"no-octal": 2,
		// disallow reassignment of function parameters
		"no-param-reassign": [0, {
			"props": false
		}],
		"no-plusplus": "error",
		// disallow use of process.env
		"no-process-env": 0,
		// disallow usage of __proto__ property
		"no-proto": 2,
		// disallow declaring the same variable more then once
		"no-redeclare": 2,
		// disallow use of assignment in return statement
		"no-return-assign": 2,
		// disallow use of `javascript:` urls.
		"no-script-url": 2,
		// disallow comparisons where both sides are exactly the same
		"no-self-compare": 2,
		// disallow use of comma operator
		"no-sequences": 2,
		// restrict what can be thrown as an exception
		"no-throw-literal": 2,
		// disallow usage of expressions in statement position
		"no-unused-expressions": [2, {
			"allowShortCircuit": true,
			"allowTernary": true
		}],
		//"no-unused-vars": 2,
		// disallow unnecessary .call() and .apply()
		"no-useless-call": 0,
		// disallow unnecessary concatenation of literals or template literals
		"no-useless-concat": 0,
		"no-var": 2,
		// disallow use of void operator
		"no-void": 0,
		// disallow usage of configurable warning terms in comments: e.g. todo
		"no-warning-comments": [
			0, {
				"terms": [
					"todo",
					"fixme",
					"xxx"
				],
				"location": "start"
			}
		],
		// disallow use of the with statement
		"no-with": 2,
		"object-shorthand": 2,
		"prefer-const": 2,
		"quote-props": 2,
		// require use of the second argument for parseInt()
		"radix": 2,
		// require or disallow semicolons instead of automatic semicolon insertion (ASI)
		"semi": "error",
		"space-before-blocks": 2,
		// Require or disallow a space before function parenthesis 
		"space-before-function-paren": 0,
		// enforce valid JSDoc comments
		"valid-jsdoc": "error",
		// requires to declare all vars on top of their containing scope
		"vars-on-top": 0,
		// require immediate function invocation to be wrapped in parentheses
		"wrap-iife": [2, "outside"],
		// require or disallow Yoda conditions
		"yoda": 2
		// --------------------------------
		// END JS RULES
		// --------------------------------
	}
}
